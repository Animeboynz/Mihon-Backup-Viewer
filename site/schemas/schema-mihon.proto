syntax = "proto2";

enum UpdateStrategy {
  ALWAYS_UPDATE = 0;
  ONLY_FETCH_ONCE = 1;
}

message PreferenceValue {
  required string type = 1;
  required bytes truevalue = 2;
}

// Backup.kt
message Backup {
  repeated BackupManga backupManga = 1;
  repeated BackupCategory backupCategories = 2;
  repeated BackupSource backupSources = 101;
  repeated BackupPreference backupPreferences = 104;
  repeated BackupSourcePreferences backupSourcePreferences = 105;
  repeated BackupExtensionRepos backupExtensionRepo = 106;
}

// BackupCategory.kt
message BackupCategory {
  required string name = 1;
  optional int64 order = 2;
  optional int64 flags = 100;
}

// BackupChapter.kt
message BackupChapter {
  required string url = 1;
  required string name = 2;
  optional string scanlator = 3;
  optional bool read = 4;
  optional bool bookmark = 5;
  optional int64 lastPageRead = 6;
  optional int64 dateFetch = 7;
  optional int64 dateUpload = 8;
  optional float chapterNumber = 9;
  optional int64 sourceOrder = 10;
  optional int64 lastModifiedAt = 11;
  optional int64 version = 12;
}

// BackupExtensionRepos.kt
message BackupExtensionRepos {
  required string baseUrl = 1;
  required string name = 2;
  optional string shortName = 3;
  required string website = 4;
  required string signingKeyFingerprint = 5;
}

// BackupHistory.kt
message BackupHistory {
  required string url = 1;
  required int64 lastRead = 2;
  optional int64 readDuration = 3;
}

// BackupManga.kt
message BackupManga {
  required int64 source = 1;
  required string url = 2;
  optional string title = 3;
  optional string artist = 4;
  optional string author = 5;
  optional string description = 6;
  repeated string genre = 7;
  optional int32 status = 8;
  optional string thumbnailUrl = 9;
  optional int64 dateAdded = 13;
  optional int32 viewer = 14;
  repeated BackupChapter chapters = 16;
  repeated int64 categories = 17;
  repeated BackupTracking tracking = 18;
  optional bool favorite = 100;
  optional int32 chapterFlags = 101;
  optional int32 viewer_flags = 103;
  repeated BackupHistory history = 104;
  optional UpdateStrategy updateStrategy = 105;
  optional int64 lastModifiedAt = 106;
  optional int64 favoriteModifiedAt = 107;
  repeated string excludedScanlators = 108;
  optional int64 version = 109;
}

// BackupPreference.kt
message BackupPreference {
  required string key = 1;
  required PreferenceValue value = 2;
}

message BackupSourcePreferences {
  required string sourceKey = 1;
  repeated BackupPreference prefs = 2;
}

message IntPreferenceValue {
  required int32 value = 1;
}

message LongPreferenceValue {
  required int64 value = 1;
}

message FloatPreferenceValue {
  required float value = 1;
}

message StringPreferenceValue {
  required string value = 1;
}

message BooleanPreferenceValue {
  required bool value = 1;
}

message StringSetPreferenceValue {
  repeated string value = 1;
}

// BackupSource.kt
message BackupSource {
  optional string name = 1;
  required int64 sourceId = 2;
}

// BackupTracking.kt
message BackupTracking {
  required int32 syncId = 1;
  required int64 libraryId = 2;
  optional int32 mediaIdInt = 3;
  optional string trackingUrl = 4;
  optional string title = 5;
  optional float lastChapterRead = 6;
  optional int32 totalChapters = 7;
  optional float score = 8;
  optional int32 status = 9;
  optional int64 startedReadingDate = 10;
  optional int64 finishedReadingDate = 11;
  optional int64 mediaId = 100;
}

